<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jelmer Snoeck</title>
    <link>/articles/</link>
    <description>Recent content in Posts on Jelmer Snoeck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Boxer: an encryption story</title>
      <link>/articles/2018/06/boxer-an-encryption-story/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/articles/2018/06/boxer-an-encryption-story/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Deploying Rock Solid Applications with Kubernetes</title>
      <link>/articles/2018/04/deploying-rock-solid-applications-with-kubernetes/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/articles/2018/04/deploying-rock-solid-applications-with-kubernetes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Migrating to Kubernetes with zero downtime: the why and how</title>
      <link>/articles/2018/03/migrating-to-kubernetes-with-zero-downtime-the-why-and-how/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/articles/2018/03/migrating-to-kubernetes-with-zero-downtime-the-why-and-how/</guid>
      <description>Originally posted on the Manifold blog
We at Manifold always strive to get the most out of everything we do. For this reason, we continuously evaluate what we’ve done to see if it still holds up to our standards. A while back, we decided to take a deeper look at our infrastructure setup.
In this blog post, we’ll look at the reasons why we moved to Kubernetes and the questions we asked ourselves.</description>
    </item>
    
    <item>
      <title>Build a container for your static JavaScript application</title>
      <link>/articles/2018/02/build-a-container-for-your-static-javascript-application/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/articles/2018/02/build-a-container-for-your-static-javascript-application/</guid>
      <description>This article was originally posted on the Manifold blog
In this blog post we’ll look at how you can build a production grade container for your static JavaScript application and how you can use a single container image for all your environments.
To do this, we need to go over several steps. Here we’ll look at how to prepare your application for production inside a container, make it possible to run this across multiple environments and actually run the container.</description>
    </item>
    
    <item>
      <title>Scaling up</title>
      <link>/articles/2015/10/scaling-up/</link>
      <pubDate>Tue, 20 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/articles/2015/10/scaling-up/</guid>
      <description>You’ve heard about it, thought about it and probably executed it. You’ve scaled your application to deal with a new amount of users. Nowadays, with services like Heroku (which we’ll focus on here), this becomes relatively easy. Either by using a bigger dyno or adding more, you’re “fine”.
This works when this is a steady level of extra traffic. When you have linear growth and no spikes. Often, this is not the case though.</description>
    </item>
    
    <item>
      <title>Getting started with Elasticsearch filters and aggregations</title>
      <link>/articles/2015/08/getting-started-with-elasticsearch-filters-and-aggregations/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/articles/2015/08/getting-started-with-elasticsearch-filters-and-aggregations/</guid>
      <description>What is Elasticsearch?
Elasticsearch is Apache Lucene on steroids. It uses Lucene at its core for full-text indexing and search. ES adds distribution, near real-time search, high availability, a RESTful interface and many more features to it.
It basically makes out of the box usage of Apache Lucene easy.
Why use elasticsearch? With Lucene at the core of ES, it’s perfect for text-based search. Going from blog posts to addresses to social media data to logs.</description>
    </item>
    
  </channel>
</rss>